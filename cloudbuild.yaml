steps:
#ossScan
- id: 'scan vulnr'
  name: snyk/snyk:golang-1.15
  entrypoint: bash
  args:
    - '-c'
    - |-
      snyk config set api=${_SNYK_TOKEN}
      snyk test --severity-threshold=medium
#codeScanning
- id: 'scan code'
  name: snyk/snyk:golang-1.15
  entrypoint: bash
  args:
    - '-c'
    - |-
      snyk config set api=${_SNYK_TOKEN}
      snyk code test --severity-threshold=medium
      snyk monitor
#Build the container image
- id: 'build-image'
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'asia-southeast2-docker.pkg.dev/${PROJECT_ID}/containers/frontend-demo:${COMMIT_SHA}', '.']
- id: 'cloud-deploy'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args: [ 'deploy', 'releases', 'create', 'test-release-${SHORT_SHA}', 
          '--skaffold-file', './deploy/skaffold.yaml', 
          '--region', 'asia-southeast2', 
          '--delivery-pipeline', 'demo-clouddeploy',
          '--labels', 'commit=${COMMIT_SHA}',
          '--annotations', 'build=https://console.cloud.google.com/cloud-build/builds;region=${LOCATION}/${BUILD_ID};tab=artifact?project=${PROJECT_ID},repo=${REPO_NAME},revision-id=${REVISION_ID}', 
          '--images=my-app-image=asia-southeast2-docker.pkg.dev/${PROJECT_ID}/containers/frontend-demo:${COMMIT_SHA}']
images: 
- asia-southeast2-docker.pkg.dev/${PROJECT_ID}/containers/frontend-demo:${COMMIT_SHA}
options:
  requestedVerifyOption: VERIFIED